import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import api from "../api/axios";
import { Link } from "react-router-dom";

export default function ProjectEdit() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [form, setForm] = useState({ name: "", description: "" });
  const [userGroups, setUserGroups] = useState([]);

  useEffect(() => {
    loadProject();
    loadGroups();
  }, []);

  const loadProject = async () => {
    const res = await api.get(`/projects/${id}`);
    setForm({
      name: res.data.name,
      description: res.data.description,
      group_id: res.data.group_id,
    });
  };

  const loadGroups = async () => {
    const res = await api.get("/groups/owned");
    setUserGroups(res.data);
  };

  const handleSave = async () => {
    try {
      await api.put(`/projects/${id}`, form);
      navigate(`/projects/${id}`);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏", err);
    }
  };

  return (
    <div className="p-6 max-w-lg mx-auto space-y-4">
      <Link to={`/projects/${id}`} className="text-blue-600 underline text-sm">
        ‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–µ–∫—Ç—É
      </Link>
      <h1 className="text-2xl font-bold">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç</h1>
      <input
        className="input w-full"
        value={form.name}
        onChange={(e) => setForm({ ...form, name: e.target.value })}
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
      />
      <textarea
        className="input w-full"
        value={form.description}
        onChange={(e) => setForm({ ...form, description: e.target.value })}
        placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
      />
      <label className="block text-sm font-medium">–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫ –≥—Ä—É–ø–ø–µ</label>
      <select
        className="input w-full"
        value={String(form.group_id || "")} // <-- –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É
        onChange={(e) =>
          setForm({
            ...form,
            group_id: e.target.value === "" ? null : parseInt(e.target.value),
          })
        }
      >
        <option value="">–ë–µ–∑ –≥—Ä—É–ø–ø—ã</option>
        {userGroups.map((group) => (
          <option key={group.id} value={group.id}>
            {group.name}
          </option>
        ))}
      </select>
      <button
        onClick={handleSave}
        className="bg-blue-600 text-white px-4 py-2 rounded"
      >
        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
      </button>
    </div>
  );
}
